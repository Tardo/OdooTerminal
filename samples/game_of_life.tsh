// Conway's Game of Life

$POS_CHECK = [[-1, -1], [0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0]]
$POS_CHECK_LEN = $POS_CHECK['length']
function get_cell_state(grid, width, height, index) {
  $cx = (floor ($index % $width))
  $cy = (floor ($index / $width))

  $alive_count = 0
  for ($o = 0; $o < $POS_CHECK_LEN; $o = $o + 1) {
    $nx = $cx + $POS_CHECK[$o][0]
    $ny = $cy + $POS_CHECK[$o][1]
    if ($nx >= 0 && $nx < $width && $ny >= 0 && $ny < $height) {
      $npos = $width * $ny + $nx
      $alive_count = $alive_count + $grid[$npos]
    }
  }

  $cstate = $grid[$index]
  $nstate = 0
  if ($cstate == 0 && $alive_count == 3) {
    $nstate = 1
  } else {
    if ($cstate == 1 && ($alive_count > 3 || $alive_count <= 1)) {
      $nstate = 0
    } else {
      if ($cstate == 1 && $alive_count >= 2 && $alive_count <= 3) {
        $nstate = 1
      }
    }
  }
  return $nstate
}

function get_new_grid_state(grid, width, height, cell_size) {
  $cgrid = []
  $grid_len = $grid['length']
  for ($e = 0; $e < $grid_len; $e = $e + 1) {
    arr_append $cgrid (get_cell_state $grid $width $height $e)
  }
  return $cgrid
}

function draw_grid_state(grid, width, cell_size) {
  $grid_len = $grid['length']
  for ($e = 0; $e < $grid_len; $e = $e + 1) {
    if ($grid[$e] == 1) {
      $x = (floor ($e % $width)) * $cell_size
      $y = (floor ($e / $width)) * $cell_size
      2d_rect -c $win -x $x -y $y -w $cell_size -h $cell_size -rc '#0000ff'
    }
  }
}

$win = (2d_create_window -w 400 -h 400 -x 600 -y 120)
$CELL_S = 16
$NUM_CELLS_ROW = (floor $win['width'] / $CELL_S)
$NUM_CELLS_COL = (floor $win['height'] / $CELL_S)
$TOTAL_CELLS = $NUM_CELLS_ROW * $NUM_CELLS_COL
$ITERATIONS = 150

$grid = []
// Populate Grid
for ($i=0; $i<$TOTAL_CELLS; $i=$i+1) {
  arr_append $grid (rand 0 1)
}

for ($i = 0; $i < $ITERATIONS; $i = $i + 1) {
  2d_clear -c $win
  draw_grid_state $grid $NUM_CELLS_ROW $CELL_S
  $grid = (get_new_grid_state $grid $NUM_CELLS_ROW $NUM_CELLS_COL $CELL_S)
  sleep 16
}

2d_destroy_window $win